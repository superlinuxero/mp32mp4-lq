#!/bin/bash

#
# mp32mp4-lq
#
# This dirty script is to convert my mp3 collection to aac with the lowest possible bitrare while keeping some decent quality,
# useful if you want to stream your collection from airsonic to your car through your mobile data connection.
#
# It uses the NeroAacEnc and NeroAacTag programs freely released by Nero for the Linux platform. Reason being at the time of
# creating this script NeroAacEnc was the best by far encoder for aac music files.
# This script also depends on lame to decode mp3 files, and on ffprobe, part of ffmpeg, to extract metadata from mp3 files.
#
# You can download NeroAAC free utilities from https://web.archive.org/web/20160923100008/http://ftp6.nero.com/tools/NeroAACCodec-1.5.1.zip
#  
# I use Guayadeque, https://guayadeque.org , to keep my music collection organized. My collection is structured as
# Album Artist/Album Name/CD#(if exists)/Song#-Title.mp3
# Guayadeque will also save the album cover as cover.jpg and place it along with the song files.
#
# This script will convert all music to aac files, and embed as much data as possible in those files.
#
# This script is to be run with an only argument: the music directory in which all your mp3 files are located. It can
# be run again and will only update new mp3 files keeping the previously converted to aac 
# 
# This script could be greatly improved with things like error detection and better file name handling.



#
# Base destination directory
#
dir=/home/$USER/MP4Library


#
# Create a temporary file with a listing of all mp3 files
#
echo Creating Temp file with a listing of all mp3 files
find "$@" -name *.[Mm][Pp]3 > /tmp/mp3_list

#
# Creating dir structure as it is in the original mp3 collection
#
echo Creating Dir Structure
find "$@" -type d -exec mkdir -p $dir/{} \;

#
# Copying covers to newly created directories
#
echo Copying Covers to newly created directories
find "$@" -type f -name cover.jpg -exec cp -u {} $dir/{} \;

#
# Parse the mp3_list and replace spaces with escaped spaces.
#
echo Replacing spaces in temporary list with escaped characters
sed -i 's: :\\ :g' /tmp/mp3_list

#
# We start the conversion by reading the temporary list of all mp3 file and converting one by one
#
cat /tmp/mp3_list |while read song
do
if [ ! -f "$dir/${song%.*}.m4a" ] ; then

  # Decoding mp3 file and encoding in aac
  lame --decode "${song}" - | neroAacEnc -if - -q 0.15 -of "$dir/${song%.*}.m4a"

  # Reading tags from mp3 file and embedding them in newly created aac file
  tags=()
  while read -r; do
    tags+=("$REPLY")
  done < <(ffprobe -i "$song" -show_format 2>/dev/null | egrep -w 'title|artist|year|album|genre|totaltracks|disc|totaldiscs|url|copyright|comment|lyrics|credits|rating|label|composer|isrc|mood|tempo|date|album_artist|TBPM' - |  sed -ne 's/date/year/' -e 's/album_artist/composer/' -e 's/TBPM/tempo/' -e '/TAG:/s/TAG/-meta/p' && ffprobe -i "$song" -show_format 2>/dev/null | egrep -w 'track' | sed -ne 's/\/.*//' -e 's/\-.*//' -e '/TAG:/s/TAG/-meta/p' && ffprobe -i "$song" -show_format 2>/dev/null | egrep -w 'album_artist' | sed -ne 's/album_artist/Band/' -e '/TAG:/s/TAG/-meta-user/p' )
  neroAacTag "$dir/${song%.*}.m4a" "${tags[@]}"
  shift

fi
done

#
# Once finished conversion we do a clean up before exiting
#
if
 test -e /tmp/mp3_list ; then
  rm /tmp/mp3_list
fi

exit

